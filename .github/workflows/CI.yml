name: CI

on:
  pull_request:
    branches: 
      - main

jobs:
  check:
    runs-on: ubuntu-latest
    name: Check
    steps:
      - uses: actions/checkout@v4

      - name: Use Node.js 20.x
        uses: actions/setup-node@v4
        with:
          node-version: 20.x

      - name: Cache node modules
        uses: actions/cache@v4
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('frontend/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: Install dependencies
        run: npm ci
        working-directory: ./frontend

      - name: Build app
        run: npm run build
        working-directory: ./frontend

      - name: Check app
        run: npm run check
        working-directory: ./frontend

  unit-test:
    timeout-minutes: 60
    runs-on: ubuntu-latest
    name: Unit tests
    env:
      PUBLIC_ENV_MODE: "testing"
    steps:
      - uses: actions/checkout@v4

      - name: Use Node.js 20.x
        uses: actions/setup-node@v4
        with:
          node-version: 20.x

      - name: Cache node modules
        uses: actions/cache@v4
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('frontend/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: Install dependencies
        run: npm ci
        working-directory: ./frontend

      - name: Build app
        run: npm run build
        working-directory: ./frontend

      - name: Run unit tests
        run: npm run test:unit
        working-directory: ./frontend

  # e2e-test:
  #   timeout-minutes: 60
  #   runs-on: ubuntu-latest
  #   name: Playwright e2e tests
  #   env:
  #     PUBLIC_ENV_MODE: "testing"
  #   steps:
  #     - uses: actions/checkout@v4

  #     - name: Use Node.js 20.x
  #       uses: actions/setup-node@v4
  #       with:
  #         node-version: 20.x

  #     - name: Cache node modules
  #       uses: actions/cache@v4
  #       env:
  #         cache-name: cache-node-modules
  #       with:
  #         path: ~/.npm
  #         key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('frontend/package-lock.json') }}
  #         restore-keys: |
  #           ${{ runner.os }}-build-${{ env.cache-name }}-
  #           ${{ runner.os }}-build-
  #           ${{ runner.os }}-

  #     - name: Get installed Playwright version
  #       run: echo "PLAYWRIGHT_VERSION=$(node -e \"console.log(require('./frontend/package-lock.json').packages['node_modules/@playwright/test'].version)\")" >> $GITHUB_ENV
  #       working-directory: ./frontend

  #     - name: Cache Playwright browsers
  #       id: playwright-cache
  #       uses: actions/cache@v4
  #       env:
  #         cache-name: cache-playwright-browsers
  #       with:
  #         path: ~/.cache/ms-playwright
  #         key: ${{ runner.os }}-playwright-${{ env.PLAYWRIGHT_VERSION }}

  #     - name: Install dependencies
  #       run: npm ci
  #       working-directory: ./frontend

  #     - name: Install Playwright Browsers
  #       run: npx playwright install --with-deps
  #       if: steps.playwright-cache.outputs.cache-hit != 'true'
  #       working-directory: ./frontend

  #     - name: Build app
  #       run: npm run build
  #       working-directory: ./frontend

  #     - name: Run Playwright tests
  #       run: npm run test:integration
  #       working-directory: ./frontend